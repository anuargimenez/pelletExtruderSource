/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     polymSimpleFoam;		//verwendeter Solver

startFrom       latestTime;			//Definition wo der Solver anfängt zu lösen

startTime       0;				//Definition des Ordners wo der Solver beginnt

stopAt          endTime;			//Ende der Simulation, damit sind Iterationsschritte gemeint, nicht die Zeit (da stationär gerechnet wird)

endTime         0.003;

deltaT          0.00000005;			//Zeitschritt sollte so klein gewählt werden, dass eine Courant-Zahl kleiner 1 erreicht wird

writeControl    timeStep;			//timeStep;

writeInterval   6000;				//Anzahl Ausgabefolder bzw. Schritte in ParaView	(deltaT*writeInterval = Schrittweite der Ordner)

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;				//erhöht um Warnings aus blockMesh zu eliminieren

writeCompression off;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable true;				//ob controlDict, fvSolution, ... während Simulation neu gelesen werden im Falle von Änderungen

//_______nachfolgend zusätzliche Ausgaben und Optionen, deren Implementierung schematisch für wallHeatFlux1 gezeigt wird
functions		//https://www.openfoam.com/documentation/guides/latest/doc/guide-function-objects.html
{
	wallHeatFlux1							//eigener Name, frei wählbar
	{	//gibt die Wärmestromdichte über die Wände in das Rechengebiet an
		type		wallHeatFlux;				//typ des FunctionObjects
		libs		("libfieldFunctionObjects.so");		//lib aus der es stammt
		//...							//zusätzliche Infos können erforderlich sein, vgl. entsprechende Dokumentation
		//region	fluid;
		patches	("wall_top");					//Zusatzinfo: auf welchen Patch soll es angewandt werden
		executeControl	timeStep;				//wann wird es ausgeführt
		writeControl	writeTime;				//wie oft wird es herausgeschrieben
	}

	residual1		//schreibt die Residuen für jeden Iterationsschritt in eine Datei im Ordner postProcessing, graphische Darstellung während des Lösens über das "AllMonitor"-Skript
	{
		type		residuals;
		libs		("libutilityFunctionObjects.so");
		writeControl    timeStep;
		writeInterval   1;
		fields (p U h);
	}

	minMax
	{
		type            volFieldValue;
		libs            ("libfieldFunctionObjects.so");
		fields          (U p);
		executeControl  writeTime;
		writeControl    writeTime;

		writeFields	false;
		log		false;

		regionType	all;
		operation	max;
	}

	writeThermophysicalProperties
	{
		type		writeObjects;
		libs		("libutilityFunctionObjects.so");
		objects	(thermo:alpha thermo:mu);
		//executeControl	timeStep;
		writeControl	writeTime;
		//writeInterval	60;
	}

	gradU
	{
		type            grad;
		libs            ("libfieldFunctionObjects.so");
		field           U;
		executeControl  writeTime;
		writeControl    writeTime;
	}

	grad_nU
	{
		type            grad;
		libs            ("libfieldFunctionObjects.so");
		field           generalizedNewtonian:nu;
		executeControl  writeTime;
		writeControl    writeTime;
	}
}

// ************************************************************************* //
